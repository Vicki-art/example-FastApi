name: Build and Deploy File 

on: [push, pull_request]
  # push: 
  #   branches: 
  #     - "main"
  #     - "branch2"
  #     - "branch3"

  # pull_request:
  #   branches: 
  #     - ....
jobs:
  build:
    environment: 
      name: testing
    env: 
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
    services: 
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
        ports: 
         - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-20.04
    steps:
      - name: pulling git repo 
        uses: actions/checkout@v2
      - name: install python version 3.9 # We can install many other versions and also check whether
      #they work on other machines.
        uses: actions/setup-python@v2 #the same as sudo apt install python
        with:
          python-version: "3.9"
      - name: update pip 
        run: python -m pip install --upgrade pip
      - name: install all dependencies 
        run: pip install -r requirenments.txt
      - name: installing pytest
        run: pip install pytest
      - name: testing
        run: pytest -v -s


      # - name: Login to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{secrets.DOCKER_HUB_USERNAME}}
      #     password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2

      # - name: Build and push
      #   id: docker_build
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     push: true
      #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:latest
      #     cache-from: type=registry,ref=user/app:latest
      #     cache-to: type=inline

  deploy:
    runs-on: ubuntu-20.04
    needs: [build]
    environment: production 

    steps: 
    - name: pulling git repo 
      uses: actions/checkout@v2
    # - name: deploying to Heroku
    #   uses: akhileshns/heroku-deploy@v3.12.13 # This is the action
    #   with:
    #     heroku_api_key: ${{secrets.HEROKU_API_KEY}}
    #     heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
    #     heroku_email: ${{secrets.HEROKU_EMAIL}}
    - name: deploy to ubuntu server
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.UBUNTU_HOST }}
        username: ${{ secrets.UBUNTU_USERNAME }}
        password: ${{ secrets.UBUNTU_PASSWORD }}
        port: ${{ secrets.PORT }}
        script:
          cd app/src
          git pull
          sudo systemctl restart api





